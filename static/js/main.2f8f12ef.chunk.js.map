{"version":3,"sources":["Title.js","Temperature.js","Weathercondition.js","Location.js","WeatherChart.js","Weatherapp.js","App.js","reportWebVitals.js","index.js"],"names":["Title","className","Temperature","props","temp_c","temp_f","Weathercondition","style","display","justifyContent","text","src","icon","alt","width","height","Location","name","country","WeatherChart","chartData","labels","hour","map","h_data","time","datasets","label","data","backgroundColor","borderColor","fill","lineTension","option","maintainAspectRatio","Weatherapp","current","condition","location","forecast","forecastday","App","setFalse","alert","setState","enterField","fetchedData","fetchWeatherapi","a","fetch","state","response","json","status","weatherInfo","handleChange","e","target","value","handleClick","match","this","type","onChange","placeholder","onClick","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2f8f12ef.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Title = () => {\r\n    return(\r\n        <p className=\"title washed-yellow\">Weather Forecast</p>\r\n    )\r\n}\r\n\r\nexport default Title","import React from 'react';\r\n\r\nconst Temperature = ({props}) => {\r\n\r\n    return(\r\n        <p className=\"temperature-display\">{props.temp_c}°C | {props.temp_f}°F </p>\r\n    )\r\n}\r\n\r\nexport default Temperature","import React from 'react';\r\n\r\nconst Weathercondition = ({props}) => {\r\n\r\n    return(\r\n        <div style={{display: \"flex\", justifyContent : 'center'}}>\r\n            <h1 className=\"weather-condition fw6\">{props.text}</h1>\r\n            <img src={props.icon} alt=\"weather-icon\" width=\"50px\" height=\"40px\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Weathercondition","import React from 'react';\r\n\r\nconst Location = ({props}) => {\r\n\r\n    return(\r\n        <>\r\n            <p className=\"location\">{props.name}, {props.country}</p>            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Location","import React from 'react';\r\nimport {Line} from 'react-chartjs-2'\r\n\r\n\r\nconst WeatherChart = ({props}) => {\r\n\r\n    const xAxis = props.hour.map(h_data=> {\r\n        return(h_data.time) \r\n    })\r\n\r\n\r\n    const yAxis = props.hour.map(h_data=> {\r\n        return(`${h_data.temp_c}`) \r\n    })\r\n\r\n    const chartData = {\r\n        labels : xAxis,\r\n        datasets : [\r\n            {\r\n                label : 'Temperature in °C',\r\n                data : yAxis,\r\n                backgroundColor : ` rgba(42, 186, 243, 0.2)`,\r\n                borderColor : 'rgba(42, 186, 243, 0.9)',\r\n                fill : true,\r\n                lineTension: '0',\r\n            }\r\n        ]\r\n    }\r\n    \r\n    return(\r\n        <div className = \"chart-box\">\r\n            <Line\r\n                data={chartData}\r\n                width={350}\r\n                height={300}\r\n                option={{ maintainAspectRatio: false}}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WeatherChart","import React from 'react';\r\nimport Temperature from './Temperature';\r\nimport Weathercondition from './Weathercondition';\r\nimport Location from './Location';\r\nimport WeatherChart from './WeatherChart';\r\n\r\n\r\nconst Weatherapp = ({ props }) => { \r\n   \r\n    return(\r\n        <>\r\n            <Temperature props={props.current}/>\r\n            <Weathercondition props = {props.current.condition} />\r\n            <Location props={props.location}/>\r\n            <div className=\"chart-box\">\r\n                <p className=\"heading\">24 Hours Weather Forecast</p>\r\n                <WeatherChart props = {props.forecast.forecastday[0]}/>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Weatherapp","import React from 'react'\nimport Title from './Title'\nimport Weatherapp from './Weatherapp';\nimport './App.css'\n\nclass App extends React.Component{\n  constructor(){\n    super()\n    this.state = {\n      enterField : \"\",\n      fetchedData : false,\n      weatherInfo : {}\n    }\n  }\n\n  setFalse=()=>{\n    alert('Enter city name')\n    this.setState({enterField : '', fetchedData: false})\n    return\n  }\n\n  fetchWeatherapi = async() => {\n\n  const response = await fetch(` https://api.weatherapi.com/v1/forecast.json?key=504227daf10e48679d7132259210701&q=${this.state.enterField}&days=1`)\n  const data =  await (response.json())\n  if(response.status!==200) {\n    alert('Data not available ');\n    this.setState({enterField: ''})\n    return\n  }\n  this.setState({ weatherInfo: data, fetchedData: true }) \n  }\n\n  handleChange=(e)=>{ this.setState({ enterField : e.target.value }) }\n\n  handleClick=()=>{\n    if (this.state.enterField==='') return;\n    else if((this.state.enterField).match(/^[A-Za-z\\s]+$/)){\n      this.setState({ enterField : this.state.enterField });\n      this.fetchWeatherapi();\n    }\n    else{\n      alert('Enter valid city name only')\n      this.setState({enterField : ''})\n    }\n  }\n\n\n  render(){\n    const fetchedData = this.state.fetchedData\n    return(\n    <div className=\"main-body\">\n      <header className=\"bg-navy header\">\n          <Title/>\n          <div className=\"sub-header\">\n            <input className=\"input bw2 b--lightest-blue\" type=\"search\" onChange={this.handleChange} value={this.state.enterField}  placeholder=\"Enter city name\"/>\n            <button onClick={this.handleClick}>➜</button>\n          </div>\n      </header>\n      { fetchedData ? <div className=\"app-body\"><Weatherapp  props = {this.state.weatherInfo}/></div> : null }\n      <div className=\"footer\">\n        <p className=\"para black b code para\">{`<Hello World/>`} ,I am Siddhant and I have made this project, weather forecasting application. \n        I have used React to built it, and used ChartJs for Line graph chart. Now as you are now still reading all this then let me tell you \n        that I have told all the necessary information already. OK sorry, i took your time, you may enter the input ;-)</p>\n      </div>\n    </div>\n    )\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'tachyons'\nimport 'chart.js'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}